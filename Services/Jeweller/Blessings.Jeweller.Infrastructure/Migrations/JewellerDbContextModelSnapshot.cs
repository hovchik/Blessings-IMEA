// <auto-generated />
using System;
using Blessings.Jeweller.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Blessings.Jeweller.Infrastructure.Migrations
{
    [DbContext(typeof(JewellerDbContext))]
    partial class JewellerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Blessings.Jeweller.Domain.Jeweller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Jewellers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = true,
                            Name = "FirstJew"
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = true,
                            Name = "SecondJew"
                        },
                        new
                        {
                            Id = 3,
                            IsAvailable = true,
                            Name = "ThirdJew"
                        },
                        new
                        {
                            Id = 4,
                            IsAvailable = true,
                            Name = "FourthJew"
                        },
                        new
                        {
                            Id = 5,
                            IsAvailable = true,
                            Name = "FifthJew"
                        });
                });

            modelBuilder.Entity("Blessings.Jeweller.Domain.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EstimatedDay")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "desc gold",
                            EstimatedDay = 5,
                            Name = "Gold"
                        },
                        new
                        {
                            Id = 2,
                            Description = "desc silver",
                            EstimatedDay = 2,
                            Name = "Silver"
                        },
                        new
                        {
                            Id = 3,
                            Description = "desc copper",
                            EstimatedDay = 3,
                            Name = "Copper"
                        });
                });

            modelBuilder.Entity("Blessings.Jeweller.Domain.OrderProcessing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("JewellerId")
                        .HasColumnType("integer");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JewellerId");

                    b.HasIndex("MaterialId");

                    b.ToTable("OrderProcessing");
                });

            modelBuilder.Entity("Blessings.Jeweller.Domain.OrderSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OrderSchedules");
                });

            modelBuilder.Entity("Blessings.Jeweller.Domain.OrderProcessing", b =>
                {
                    b.HasOne("Blessings.Jeweller.Domain.Jeweller", "Jeweller")
                        .WithMany("OrderProcessing")
                        .HasForeignKey("JewellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blessings.Jeweller.Domain.Material", "Material")
                        .WithMany("OrderProcessings")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jeweller");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Blessings.Jeweller.Domain.Jeweller", b =>
                {
                    b.Navigation("OrderProcessing");
                });

            modelBuilder.Entity("Blessings.Jeweller.Domain.Material", b =>
                {
                    b.Navigation("OrderProcessings");
                });
#pragma warning restore 612, 618
        }
    }
}
